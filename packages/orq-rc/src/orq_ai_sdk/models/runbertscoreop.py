"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from orq_ai_sdk import utils
from orq_ai_sdk.types import BaseModel
from typing_extensions import TypedDict


class RunBertScoreRequestBodyTypedDict(TypedDict):
    output: str
    reference: str


class RunBertScoreRequestBody(BaseModel):
    output: str

    reference: str


class RunBertScoreEvalsResponseResponseBodyData(BaseModel):
    message: str


class RunBertScoreEvalsResponseResponseBody(Exception):
    r"""Internal server error"""

    data: RunBertScoreEvalsResponseResponseBodyData

    def __init__(self, data: RunBertScoreEvalsResponseResponseBodyData):
        self.data = data

    def __str__(self) -> str:
        return utils.marshal_json(self.data, RunBertScoreEvalsResponseResponseBodyData)


class RunBertScoreEvalsResponseBodyData(BaseModel):
    message: str


class RunBertScoreEvalsResponseBody(Exception):
    r"""Evaluator not found"""

    data: RunBertScoreEvalsResponseBodyData

    def __init__(self, data: RunBertScoreEvalsResponseBodyData):
        self.data = data

    def __str__(self) -> str:
        return utils.marshal_json(self.data, RunBertScoreEvalsResponseBodyData)


class RunBertScoreValueTypedDict(TypedDict):
    f1: float
    precision: float
    recall: float


class RunBertScoreValue(BaseModel):
    f1: float

    precision: float

    recall: float


class RunBertScoreResponseBodyTypedDict(TypedDict):
    r"""Returns the BERT Score evaluation result"""

    value: RunBertScoreValueTypedDict


class RunBertScoreResponseBody(BaseModel):
    r"""Returns the BERT Score evaluation result"""

    value: RunBertScoreValue
