"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .publiccontact import PublicContact, PublicContactTypedDict
from orq_ai_sdk.types import BaseModel
from typing import List, Literal, Optional, Union
from typing_extensions import NotRequired, TypeAliasType, TypedDict


Six = Literal["elevenlabs/eleven_flash_v2"]

Five = Literal["elevenlabs/eleven_flash_v2_5"]

Model4 = Literal["elevenlabs/eleven_multilingual_v2"]

Model3 = Literal["elevenlabs/eleven_turbo_v2_5"]

Model2 = Literal["openai/tts-1-hd"]

Model1 = Literal["openai/tts-1"]

ModelTypedDict = TypeAliasType(
    "ModelTypedDict", Union[Model1, Model2, Model3, Model4, Five, Six]
)
r"""ID of the model to use"""


Model = TypeAliasType("Model", Union[Model1, Model2, Model3, Model4, Five, Six])
r"""ID of the model to use"""


PostV2ProxyAudioSpeechResponseFormat = Literal[
    "mp3", "opus", "aac", "flac", "wav", "pcm"
]
r"""The format to audio in. Supported formats are `mp3`, `opus`, `aac`, `flac`, `wav`, and `pcm`. If a format is provided but not supported by the provider, the response will be in the default format. When the provided format is not supported by the provider, the response will be in the default format."""


class PostV2ProxyAudioSpeechRetryTypedDict(TypedDict):
    r"""Retry configuration for the request"""

    count: NotRequired[float]
    r"""Number of retry attempts (1-5)"""
    on_codes: NotRequired[List[float]]
    r"""HTTP status codes that trigger retry logic"""


class PostV2ProxyAudioSpeechRetry(BaseModel):
    r"""Retry configuration for the request"""

    count: Optional[float] = 3
    r"""Number of retry attempts (1-5)"""

    on_codes: Optional[List[float]] = None
    r"""HTTP status codes that trigger retry logic"""


class PostV2ProxyAudioSpeechFallbacksTypedDict(TypedDict):
    model: str
    r"""Fallback model identifier"""


class PostV2ProxyAudioSpeechFallbacks(BaseModel):
    model: str
    r"""Fallback model identifier"""


class PostV2ProxyAudioSpeechThreadTypedDict(TypedDict):
    r"""Thread information to group related requests"""

    id: str
    r"""Unique thread identifier to group related invocations."""
    tags: NotRequired[List[str]]
    r"""Optional tags to differentiate or categorize threads"""


class PostV2ProxyAudioSpeechThread(BaseModel):
    r"""Thread information to group related requests"""

    id: str
    r"""Unique thread identifier to group related invocations."""

    tags: Optional[List[str]] = None
    r"""Optional tags to differentiate or categorize threads"""


class PostV2ProxyAudioSpeechOrqTypedDict(TypedDict):
    retry: NotRequired[PostV2ProxyAudioSpeechRetryTypedDict]
    r"""Retry configuration for the request"""
    fallbacks: NotRequired[List[PostV2ProxyAudioSpeechFallbacksTypedDict]]
    r"""Array of fallback models to use if primary model fails"""
    name: NotRequired[str]
    r"""The name to display on the trace. If not specified, the default system name will be used."""
    contact: NotRequired[PublicContactTypedDict]
    r"""Information about the contact making the request. If the contact does not exist, it will be created automatically."""
    thread: NotRequired[PostV2ProxyAudioSpeechThreadTypedDict]
    r"""Thread information to group related requests"""


class PostV2ProxyAudioSpeechOrq(BaseModel):
    retry: Optional[PostV2ProxyAudioSpeechRetry] = None
    r"""Retry configuration for the request"""

    fallbacks: Optional[List[PostV2ProxyAudioSpeechFallbacks]] = None
    r"""Array of fallback models to use if primary model fails"""

    name: Optional[str] = None
    r"""The name to display on the trace. If not specified, the default system name will be used."""

    contact: Optional[PublicContact] = None
    r"""Information about the contact making the request. If the contact does not exist, it will be created automatically."""

    thread: Optional[PostV2ProxyAudioSpeechThread] = None
    r"""Thread information to group related requests"""


class PostV2ProxyAudioSpeechRequestBodyTypedDict(TypedDict):
    r"""input"""

    input: str
    r"""The text to generate audio for. The maximum length is 4096 characters"""
    model: ModelTypedDict
    r"""ID of the model to use"""
    voice: str
    r"""The voice to use.

    Available voices for OpenAI

    `alloy`, `echo`, `fable`, `onyx`, `nova`, and `shimmer`

    Available voices for ElevenLabs

    `aria`, `roger`, `sarah`, `laura`, `charlie`, `george`, `callum`, `river`, `liam`, `charlotte`, `alice`, `matilda`, `will`, `jessica`, `eric`, `chris`, `brian`, `daniel`, `lily`, `bill`
    """
    response_format: NotRequired[PostV2ProxyAudioSpeechResponseFormat]
    r"""The format to audio in. Supported formats are `mp3`, `opus`, `aac`, `flac`, `wav`, and `pcm`. If a format is provided but not supported by the provider, the response will be in the default format. When the provided format is not supported by the provider, the response will be in the default format."""
    speed: NotRequired[float]
    r"""The speed of the generated audio."""
    orq: NotRequired[PostV2ProxyAudioSpeechOrqTypedDict]


class PostV2ProxyAudioSpeechRequestBody(BaseModel):
    r"""input"""

    input: str
    r"""The text to generate audio for. The maximum length is 4096 characters"""

    model: Model
    r"""ID of the model to use"""

    voice: str
    r"""The voice to use.

    Available voices for OpenAI

    `alloy`, `echo`, `fable`, `onyx`, `nova`, and `shimmer`

    Available voices for ElevenLabs

    `aria`, `roger`, `sarah`, `laura`, `charlie`, `george`, `callum`, `river`, `liam`, `charlotte`, `alice`, `matilda`, `will`, `jessica`, `eric`, `chris`, `brian`, `daniel`, `lily`, `bill`
    """

    response_format: Optional[PostV2ProxyAudioSpeechResponseFormat] = "mp3"
    r"""The format to audio in. Supported formats are `mp3`, `opus`, `aac`, `flac`, `wav`, and `pcm`. If a format is provided but not supported by the provider, the response will be in the default format. When the provided format is not supported by the provider, the response will be in the default format."""

    speed: Optional[float] = 1
    r"""The speed of the generated audio."""

    orq: Optional[PostV2ProxyAudioSpeechOrq] = None
