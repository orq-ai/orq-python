"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from orq_ai_sdk.types import BaseModel
from orq_ai_sdk.utils import FieldMetadata, PathParamMetadata, RequestMetadata
from typing import Any, Dict, Literal, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


Review = Literal["approved", "rejected"]


class ReviewActionRequestBodyTypedDict(TypedDict):
    review: Review
    mock_output: NotRequired[Dict[str, Any]]
    source: NotRequired[str]


class ReviewActionRequestBody(BaseModel):
    review: Review

    mock_output: Optional[Dict[str, Any]] = None

    source: Optional[str] = None


class ReviewActionRequestTypedDict(TypedDict):
    agent_key: str
    task_id: str
    action_id: str
    request_body: NotRequired[ReviewActionRequestBodyTypedDict]


class ReviewActionRequest(BaseModel):
    agent_key: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]

    task_id: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]

    action_id: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]

    request_body: Annotated[
        Optional[ReviewActionRequestBody],
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ] = None


class ReviewActionResponseBodyTypedDict(TypedDict):
    r"""Successfully reviewed the action"""

    success: bool
    message: str


class ReviewActionResponseBody(BaseModel):
    r"""Successfully reviewed the action"""

    success: bool

    message: str
