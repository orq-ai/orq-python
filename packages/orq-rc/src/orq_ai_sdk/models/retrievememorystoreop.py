"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from orq_ai_sdk.types import BaseModel
from orq_ai_sdk.utils import FieldMetadata, PathParamMetadata
import pydantic
from typing import Literal, Optional, Union
from typing_extensions import Annotated, NotRequired, TypeAliasType, TypedDict


class RetrieveMemoryStoreRequestTypedDict(TypedDict):
    memory_store_key: str
    r"""The unique key identifier of the memory store"""


class RetrieveMemoryStoreRequest(BaseModel):
    memory_store_key: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""The unique key identifier of the memory store"""


RetrieveMemoryStoreModel17 = Literal["jina/jina-embeddings-v3"]

RetrieveMemoryStoreModel16 = Literal["jina/jina-clip-v2"]

RetrieveMemoryStoreModel15 = Literal["jina/jina-embeddings-v2-base-de"]

RetrieveMemoryStoreModel14 = Literal["jina/jina-embeddings-v2-base-code"]

RetrieveMemoryStoreModel13 = Literal["jina/jina-embeddings-v2-base-zh"]

RetrieveMemoryStoreModel12 = Literal["jina/jina-embeddings-v2-base-en"]

RetrieveMemoryStoreModel11 = Literal["jina/jina-embeddings-v2-base-es"]

RetrieveMemoryStoreModel10 = Literal["jina/jina-clip-v1"]

RetrieveMemoryStoreModel9 = Literal["google-ai/text-embedding-004"]

RetrieveMemoryStoreModel8 = Literal["openai/text-embedding-ada-002"]

RetrieveMemoryStoreModel7 = Literal["openai/text-embedding-3-small"]

RetrieveMemoryStoreModel6 = Literal["openai/text-embedding-3-large"]

RetrieveMemoryStoreModel5 = Literal["azure/text-embedding-ada-002"]

RetrieveMemoryStoreModel4 = Literal["cohere/embed-english-v3.0"]

RetrieveMemoryStoreModel3 = Literal["cohere/embed-english-light-v3.0"]

RetrieveMemoryStoreModel2 = Literal["cohere/embed-multilingual-light-v3.0"]

RetrieveMemoryStoreModel1 = Literal["cohere/embed-multilingual-v3.0"]

RetrieveMemoryStoreModelTypedDict = TypeAliasType(
    "RetrieveMemoryStoreModelTypedDict",
    Union[
        RetrieveMemoryStoreModel1,
        RetrieveMemoryStoreModel2,
        RetrieveMemoryStoreModel3,
        RetrieveMemoryStoreModel4,
        RetrieveMemoryStoreModel5,
        RetrieveMemoryStoreModel6,
        RetrieveMemoryStoreModel7,
        RetrieveMemoryStoreModel8,
        RetrieveMemoryStoreModel9,
        RetrieveMemoryStoreModel10,
        RetrieveMemoryStoreModel11,
        RetrieveMemoryStoreModel12,
        RetrieveMemoryStoreModel13,
        RetrieveMemoryStoreModel14,
        RetrieveMemoryStoreModel15,
        RetrieveMemoryStoreModel16,
        RetrieveMemoryStoreModel17,
    ],
)


RetrieveMemoryStoreModel = TypeAliasType(
    "RetrieveMemoryStoreModel",
    Union[
        RetrieveMemoryStoreModel1,
        RetrieveMemoryStoreModel2,
        RetrieveMemoryStoreModel3,
        RetrieveMemoryStoreModel4,
        RetrieveMemoryStoreModel5,
        RetrieveMemoryStoreModel6,
        RetrieveMemoryStoreModel7,
        RetrieveMemoryStoreModel8,
        RetrieveMemoryStoreModel9,
        RetrieveMemoryStoreModel10,
        RetrieveMemoryStoreModel11,
        RetrieveMemoryStoreModel12,
        RetrieveMemoryStoreModel13,
        RetrieveMemoryStoreModel14,
        RetrieveMemoryStoreModel15,
        RetrieveMemoryStoreModel16,
        RetrieveMemoryStoreModel17,
    ],
)


class RetrieveMemoryStoreEmbeddingConfigTypedDict(TypedDict):
    model: RetrieveMemoryStoreModelTypedDict


class RetrieveMemoryStoreEmbeddingConfig(BaseModel):
    model: RetrieveMemoryStoreModel


class RetrieveMemoryStoreResponseBodyTypedDict(TypedDict):
    r"""Memory store details successfully retrieved."""

    id: str
    r"""The unique identifier of the memory store"""
    key: str
    r"""The unique key of the memory store. The key is unique and inmmutable and cannot be repeated within the same workspace."""
    description: str
    r"""The description of the memory store. Be as precise as possible to help the AI to understand the purpose of the memory store."""
    created: str
    r"""The creation date of the memory store"""
    updated: str
    r"""The last update date of the memory store"""
    embedding_config: RetrieveMemoryStoreEmbeddingConfigTypedDict
    created_by_id: NotRequired[str]
    r"""The user ID of the creator"""
    updated_by_id: NotRequired[str]
    r"""The user ID of the last updater"""
    ttl: NotRequired[float]
    r"""The default time to live of every memory document created within the memory store. Useful to control if the documents in the memory should be store for short or long term."""


class RetrieveMemoryStoreResponseBody(BaseModel):
    r"""Memory store details successfully retrieved."""

    id: Annotated[str, pydantic.Field(alias="_id")]
    r"""The unique identifier of the memory store"""

    key: str
    r"""The unique key of the memory store. The key is unique and inmmutable and cannot be repeated within the same workspace."""

    description: str
    r"""The description of the memory store. Be as precise as possible to help the AI to understand the purpose of the memory store."""

    created: str
    r"""The creation date of the memory store"""

    updated: str
    r"""The last update date of the memory store"""

    embedding_config: RetrieveMemoryStoreEmbeddingConfig

    created_by_id: Optional[str] = None
    r"""The user ID of the creator"""

    updated_by_id: Optional[str] = None
    r"""The user ID of the last updater"""

    ttl: Optional[float] = None
    r"""The default time to live of every memory document created within the memory store. Useful to control if the documents in the memory should be store for short or long term."""
