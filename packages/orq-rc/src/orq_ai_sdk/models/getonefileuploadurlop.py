"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from orq_ai_sdk.types import BaseModel
from orq_ai_sdk.utils import FieldMetadata, PathParamMetadata, QueryParamMetadata
import pydantic
from typing import Any, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetOneFileUploadURLRequestTypedDict(TypedDict):
    knowledge_id: str
    r"""The unique identifier of the knowledge base"""
    file_name: str
    content_type: str
    datasource_id: str


class GetOneFileUploadURLRequest(BaseModel):
    knowledge_id: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""The unique identifier of the knowledge base"""

    file_name: Annotated[
        str,
        pydantic.Field(alias="fileName"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ]

    content_type: Annotated[
        str,
        pydantic.Field(alias="contentType"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ]

    datasource_id: Annotated[
        str,
        pydantic.Field(alias="datasourceId"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ]


class GetOneFileUploadURLResponseBodyTypedDict(TypedDict):
    r"""Expected upload request model"""

    object_name: str
    post_policy: NotRequired[Any]


class GetOneFileUploadURLResponseBody(BaseModel):
    r"""Expected upload request model"""

    object_name: Annotated[str, pydantic.Field(alias="objectName")]

    post_policy: Annotated[Optional[Any], pydantic.Field(alias="postPolicy")] = None
