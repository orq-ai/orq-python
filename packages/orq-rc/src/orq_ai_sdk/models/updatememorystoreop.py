"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from orq_ai_sdk.types import BaseModel
from orq_ai_sdk.utils import FieldMetadata, PathParamMetadata, RequestMetadata
import pydantic
from typing import Literal, Optional, Union
from typing_extensions import Annotated, NotRequired, TypeAliasType, TypedDict


Model17 = Literal["jina/jina-embeddings-v3"]

Model16 = Literal["jina/jina-clip-v2"]

Model15 = Literal["jina/jina-embeddings-v2-base-de"]

Model14 = Literal["jina/jina-embeddings-v2-base-code"]

Model13 = Literal["jina/jina-embeddings-v2-base-zh"]

Model12 = Literal["jina/jina-embeddings-v2-base-en"]

Model11 = Literal["jina/jina-embeddings-v2-base-es"]

Model10 = Literal["jina/jina-clip-v1"]

Model9 = Literal["google-ai/text-embedding-004"]

Model8 = Literal["openai/text-embedding-ada-002"]

Model7 = Literal["openai/text-embedding-3-small"]

Model6 = Literal["openai/text-embedding-3-large"]

Model5 = Literal["azure/text-embedding-ada-002"]

Model4 = Literal["cohere/embed-english-v3.0"]

UpdateMemoryStoreModel3 = Literal["cohere/embed-english-light-v3.0"]

UpdateMemoryStoreModel2 = Literal["cohere/embed-multilingual-light-v3.0"]

UpdateMemoryStoreModel1 = Literal["cohere/embed-multilingual-v3.0"]

UpdateMemoryStoreModelTypedDict = TypeAliasType(
    "UpdateMemoryStoreModelTypedDict",
    Union[
        UpdateMemoryStoreModel1,
        UpdateMemoryStoreModel2,
        UpdateMemoryStoreModel3,
        Model4,
        Model5,
        Model6,
        Model7,
        Model8,
        Model9,
        Model10,
        Model11,
        Model12,
        Model13,
        Model14,
        Model15,
        Model16,
        Model17,
    ],
)


UpdateMemoryStoreModel = TypeAliasType(
    "UpdateMemoryStoreModel",
    Union[
        UpdateMemoryStoreModel1,
        UpdateMemoryStoreModel2,
        UpdateMemoryStoreModel3,
        Model4,
        Model5,
        Model6,
        Model7,
        Model8,
        Model9,
        Model10,
        Model11,
        Model12,
        Model13,
        Model14,
        Model15,
        Model16,
        Model17,
    ],
)


class UpdateMemoryStoreEmbeddingConfigTypedDict(TypedDict):
    model: UpdateMemoryStoreModelTypedDict


class UpdateMemoryStoreEmbeddingConfig(BaseModel):
    model: UpdateMemoryStoreModel


class UpdateMemoryStoreRequestBodyTypedDict(TypedDict):
    embedding_config: UpdateMemoryStoreEmbeddingConfigTypedDict
    description: str
    r"""The description of the memory store. Be as precise as possible to help the AI to understand the purpose of the memory store."""
    path: str
    r"""The path where the entity is stored in the project structure. The first element of the path always represents the project name. Any subsequent path element after the project will be created as a folder in the project if it does not exists."""
    ttl: NotRequired[float]
    r"""The default time to live of every memory document created within the memory store. Useful to control if the documents in the memory should be store for short or long term."""


class UpdateMemoryStoreRequestBody(BaseModel):
    embedding_config: UpdateMemoryStoreEmbeddingConfig

    description: str
    r"""The description of the memory store. Be as precise as possible to help the AI to understand the purpose of the memory store."""

    path: str
    r"""The path where the entity is stored in the project structure. The first element of the path always represents the project name. Any subsequent path element after the project will be created as a folder in the project if it does not exists."""

    ttl: Optional[float] = None
    r"""The default time to live of every memory document created within the memory store. Useful to control if the documents in the memory should be store for short or long term."""


class UpdateMemoryStoreRequestTypedDict(TypedDict):
    memory_store_key: str
    r"""The unique key identifier of the memory store"""
    request_body: NotRequired[UpdateMemoryStoreRequestBodyTypedDict]


class UpdateMemoryStoreRequest(BaseModel):
    memory_store_key: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""The unique key identifier of the memory store"""

    request_body: Annotated[
        Optional[UpdateMemoryStoreRequestBody],
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ] = None


UpdateMemoryStoreProvider = Literal[
    "cohere",
    "openai",
    "anthropic",
    "huggingface",
    "replicate",
    "google",
    "google-ai",
    "azure",
    "aws",
    "anyscale",
    "perplexity",
    "groq",
    "fal",
    "leonardoai",
    "nvidia",
    "jina",
    "togetherai",
    "elevenlabs",
]
r"""The provider of the AI service"""


class UpdateMemoryStoreMemoryStoresEmbeddingConfigTypedDict(TypedDict):
    model_id: str
    provider: UpdateMemoryStoreProvider
    r"""The provider of the AI service"""
    integration_id: NotRequired[str]
    top_k: NotRequired[float]
    r"""Number of results to return"""


class UpdateMemoryStoreMemoryStoresEmbeddingConfig(BaseModel):
    model_id: str

    provider: UpdateMemoryStoreProvider
    r"""The provider of the AI service"""

    integration_id: Optional[str] = None

    top_k: Optional[float] = None
    r"""Number of results to return"""


class UpdateMemoryStoreResponseBodyTypedDict(TypedDict):
    r"""Memory store successfully updated."""

    id: str
    r"""The unique identifier of the memory store"""
    key: str
    r"""The unique key of the memory store. The key is unique and inmmutable and cannot be repeated within the same workspace."""
    project_id: str
    r"""The project unique identifier. This entity is assigned based on the provided `path` property"""
    description: str
    r"""The description of the memory store. Be as precise as possible to help the AI to understand the purpose of the memory store."""
    created: str
    r"""The creation date of the memory store"""
    updated: str
    r"""The last update date of the memory store"""
    embedding_config: UpdateMemoryStoreMemoryStoresEmbeddingConfigTypedDict
    created_by_id: NotRequired[str]
    r"""The user ID of the creator"""
    updated_by_id: NotRequired[str]
    r"""The user ID of the last updater"""
    ttl: NotRequired[float]
    r"""The default time to live of every memory document created within the memory store. Useful to control if the documents in the memory should be store for short or long term."""


class UpdateMemoryStoreResponseBody(BaseModel):
    r"""Memory store successfully updated."""

    id: Annotated[str, pydantic.Field(alias="_id")]
    r"""The unique identifier of the memory store"""

    key: str
    r"""The unique key of the memory store. The key is unique and inmmutable and cannot be repeated within the same workspace."""

    project_id: str
    r"""The project unique identifier. This entity is assigned based on the provided `path` property"""

    description: str
    r"""The description of the memory store. Be as precise as possible to help the AI to understand the purpose of the memory store."""

    created: str
    r"""The creation date of the memory store"""

    updated: str
    r"""The last update date of the memory store"""

    embedding_config: UpdateMemoryStoreMemoryStoresEmbeddingConfig

    created_by_id: Optional[str] = None
    r"""The user ID of the creator"""

    updated_by_id: Optional[str] = None
    r"""The user ID of the last updater"""

    ttl: Optional[float] = None
    r"""The default time to live of every memory document created within the memory store. Useful to control if the documents in the memory should be store for short or long term."""
