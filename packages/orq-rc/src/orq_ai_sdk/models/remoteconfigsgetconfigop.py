"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from orq_ai_sdk.types import BaseModel
from orq_ai_sdk.utils import FieldMetadata, HeaderMetadata
import pydantic
from typing import Any, Dict, Literal, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class RemoteConfigsGetConfigGlobalsTypedDict(TypedDict):
    contact_id: NotRequired[str]


class RemoteConfigsGetConfigGlobals(BaseModel):
    contact_id: Annotated[
        Optional[str],
        pydantic.Field(alias="contactId"),
        FieldMetadata(header=HeaderMetadata(style="simple", explode=False)),
    ] = None


class RemoteConfigsGetConfigRequestBodyTypedDict(TypedDict):
    key: str
    r"""Remote configuration key"""
    context: NotRequired[Dict[str, Any]]
    r"""Key-value pairs matching your data model, applied to each prompt key."""
    metadata: NotRequired[Dict[str, Any]]
    r"""Key-value pairs to attach to the log generated by this request."""


class RemoteConfigsGetConfigRequestBody(BaseModel):
    key: str
    r"""Remote configuration key"""

    context: Optional[Dict[str, Any]] = None
    r"""Key-value pairs matching your data model, applied to each prompt key."""

    metadata: Optional[Dict[str, Any]] = None
    r"""Key-value pairs to attach to the log generated by this request."""


RemoteConfigsGetConfigType = Literal[
    "boolean", "string", "integer", "decimal", "list", "json", "deployment"
]


class RemoteConfigsGetConfigResponseBodyTypedDict(TypedDict):
    r"""An individual remote config"""

    type: RemoteConfigsGetConfigType
    value: NotRequired[Any]


class RemoteConfigsGetConfigResponseBody(BaseModel):
    r"""An individual remote config"""

    type: RemoteConfigsGetConfigType

    value: Optional[Any] = None
