"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from dataclasses import dataclass, field
import httpx
from orq_ai_sdk.models import OrqError
from orq_ai_sdk.types import BaseModel
from orq_ai_sdk.utils import FieldMetadata, PathParamMetadata
from typing import Optional
from typing_extensions import Annotated, TypedDict


class DeleteAgentRequestTypedDict(TypedDict):
    agent_key: str
    r"""The unique key of the agent to delete"""


class DeleteAgentRequest(BaseModel):
    agent_key: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""The unique key of the agent to delete"""


class DeleteAgentResponseBodyData(BaseModel):
    message: str


@dataclass(unsafe_hash=True)
class DeleteAgentResponseBody(OrqError):
    r"""Agent not found"""

    data: DeleteAgentResponseBodyData = field(hash=False)

    def __init__(
        self,
        data: DeleteAgentResponseBodyData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        fallback = body or raw_response.text
        message = str(data.message) or fallback
        super().__init__(message, raw_response, body)
        object.__setattr__(self, "data", data)
