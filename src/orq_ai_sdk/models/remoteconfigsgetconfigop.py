"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from orq_ai_sdk.types import BaseModel
from typing import Any, Dict, Optional
from typing_extensions import NotRequired, TypedDict


class RemoteConfigsGetConfigRequestBodyTypedDict(TypedDict):
    key: str
    r"""Remote configuration key"""
    context: NotRequired[Dict[str, Any]]
    r"""Key-value pairs matching your data model, applied to each prompt key."""
    metadata: NotRequired[Dict[str, Any]]
    r"""Key-value pairs to attach to the log generated by this request."""


class RemoteConfigsGetConfigRequestBody(BaseModel):
    key: str
    r"""Remote configuration key"""

    context: Optional[Dict[str, Any]] = None
    r"""Key-value pairs matching your data model, applied to each prompt key."""

    metadata: Optional[Dict[str, Any]] = None
    r"""Key-value pairs to attach to the log generated by this request."""


class RemoteConfigsGetConfigType(str, Enum):
    BOOLEAN = "boolean"
    STRING = "string"
    INTEGER = "integer"
    DECIMAL = "decimal"
    LIST = "list"
    JSON = "json"
    DEPLOYMENT = "deployment"


class RemoteConfigsGetConfigResponseBodyTypedDict(TypedDict):
    r"""An individual remote config"""

    type: RemoteConfigsGetConfigType
    value: NotRequired[Any]


class RemoteConfigsGetConfigResponseBody(BaseModel):
    r"""An individual remote config"""

    type: RemoteConfigsGetConfigType

    value: Optional[Any] = None
