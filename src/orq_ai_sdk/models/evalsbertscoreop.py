"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from dataclasses import dataclass, field
import httpx
from orq_ai_sdk.models import OrqError
from orq_ai_sdk.types import BaseModel
from typing import Optional
from typing_extensions import TypedDict


class EvalsBertScoreRequestBodyTypedDict(TypedDict):
    output: str
    reference: str


class EvalsBertScoreRequestBody(BaseModel):
    output: str

    reference: str


class EvalsBertScoreEvalsResponseResponseBodyData(BaseModel):
    message: str


@dataclass(frozen=True)
class EvalsBertScoreEvalsResponseResponseBody(OrqError):
    r"""Internal server error"""

    data: EvalsBertScoreEvalsResponseResponseBodyData = field(hash=False)

    def __init__(
        self,
        data: EvalsBertScoreEvalsResponseResponseBodyData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        fallback = body or raw_response.text
        message = str(data.message) or fallback
        super().__init__(message, raw_response, body)
        object.__setattr__(self, "data", data)


class EvalsBertScoreEvalsResponseBodyData(BaseModel):
    message: str


@dataclass(frozen=True)
class EvalsBertScoreEvalsResponseBody(OrqError):
    r"""Evaluator not found"""

    data: EvalsBertScoreEvalsResponseBodyData = field(hash=False)

    def __init__(
        self,
        data: EvalsBertScoreEvalsResponseBodyData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        fallback = body or raw_response.text
        message = str(data.message) or fallback
        super().__init__(message, raw_response, body)
        object.__setattr__(self, "data", data)


class EvalsBertScoreValueTypedDict(TypedDict):
    f1: float
    precision: float
    recall: float


class EvalsBertScoreValue(BaseModel):
    f1: float

    precision: float

    recall: float


class EvalsBertScoreResponseBodyTypedDict(TypedDict):
    r"""Returns the BERT Score evaluation result"""

    value: EvalsBertScoreValueTypedDict


class EvalsBertScoreResponseBody(BaseModel):
    r"""Returns the BERT Score evaluation result"""

    value: EvalsBertScoreValue
